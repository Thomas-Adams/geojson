/*
 * Created on 24 Mar 2018 ( Time 16:58:18 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.adams.geo.gisweb.web.common;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Component;
import org.springframework.ui.Model;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

@Component
public class MessageHelper {

	public void addException(final Model uiModel, final String messageKey, final Exception e) {
		List<Message> messages = getMessages(uiModel);
		addException(messages, messageKey, e);
	}

	public void addException(final RedirectAttributes redirectAttributes, final String messageKey, final Exception e) {
		List<Message> messages = getMessages(redirectAttributes);
		addException(messages, messageKey, e);
	}

	public void addException(final List<Message> messages, final Exception e) {
		if (e.getCause() == null) {
			messages.add(new Message(MessageType.DANGER, "error", e.getMessage()));
		} else {
			messages.add(
					new Message(MessageType.DANGER, "error.with.cause", e.getMessage(), e.getCause().getMessage()));
		}
	}

	public void addException(final List<Message> messages, final String messageKey, final Exception e) {
		if (e.getCause() == null) {
			messages.add(new Message(MessageType.DANGER, messageKey, e.getMessage()));
		} else {
			messages.add(new Message(MessageType.DANGER, messageKey, e.getMessage(), e.getCause().getMessage()));
		}
	}

	public void addMessage(final RedirectAttributes redirectAttributes, final Message message) {
		List<Message> messages = getMessages(redirectAttributes);
		messages.add(message);
	}

	public void addMessage(final Model uiModel, final Message message) {
		List<Message> messages = getMessages(uiModel);
		messages.add(message);
	}

	@SuppressWarnings("unchecked")
	private List<Message> getMessages(final RedirectAttributes redirectAttributes) {
		Map<String, Object> map = (Map<String, Object>) redirectAttributes.getFlashAttributes();
		return (List<Message>) map.computeIfAbsent("messages", m -> new ArrayList<Message>());
	}

	@SuppressWarnings("unchecked")
	private List<Message> getMessages(final Model uiModel) {
		Map<String, Object> map = uiModel.asMap();
		return (List<Message>) map.computeIfAbsent("messages", m -> new ArrayList<Message>());
	}
}
