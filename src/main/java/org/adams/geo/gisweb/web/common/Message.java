/*
 * Created on 24 Mï¿½r 2018 ( Time 16:58:18 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.adams.geo.gisweb.web.common;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Message implements Serializable {

	private static final long serialVersionUID = -6488696546322780424L;

	private MessageType type;

	private String message;

	private List<String> messageArguments = new ArrayList<>();;

	public Message() {
	}

	public Message(final MessageType type, final String message) {
		this.type = type;
		this.message = message;
	}

	public Message(final MessageType type, final String message, final String... messageArguments) {
		this.type = type;
		this.message = message;
		this.messageArguments.addAll(Arrays.asList(messageArguments));
	}

	public void addMessageArgument(final String messageArgument) {
		messageArguments.add(messageArgument);
	}

	public MessageType getType() {
		return type;
	}

	public void setType(final MessageType type) {
		this.type = type;
	}

	public String getMessage() {
		return message;
	}

	public void setMessage(final String message) {
		this.message = message;
	}

	public List<String> getMessageArguments() {
		return messageArguments;
	}

	public void setMessageArguments(final List<String> messageArguments) {
		this.messageArguments = messageArguments;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + (message == null ? 0 : message.hashCode());
		result = prime * result + (messageArguments == null ? 0 : messageArguments.hashCode());
		result = prime * result + (type == null ? 0 : type.hashCode());
		return result;
	}

	@Override
	public boolean equals(final Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Message other = (Message) obj;
		if (message == null) {
			if (other.message != null) {
				return false;
			}
		} else if (!message.equals(other.message)) {
			return false;
		}
		if (messageArguments == null) {
			if (other.messageArguments != null) {
				return false;
			}
		} else if (!messageArguments.equals(other.messageArguments)) {
			return false;
		}
		return type == other.type;
	}

}
