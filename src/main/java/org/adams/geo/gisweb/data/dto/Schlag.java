/*
 * Java bean class for entity table schlag
 * Created on 23 Mï¿½r 2018 ( Date ISO 2018-03-23 - Time 23:44:21 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */

package org.adams.geo.gisweb.data.dto;

import java.io.Serializable;
import java.math.BigDecimal;

import com.vividsolutions.jts.geom.Geometry;

/**
 * Entity bean for table "schlag"
 *
 * @author Telosys Tools Generator
 *
 */
public class Schlag implements Serializable {
	private static final long serialVersionUID = 1L;

	private Integer gid; // Primary Key

	private String flik;
	private BigDecimal schlagnr;
	private String kulturcode;
	private Long antjahr;
	private Double gemFl;
	private Geometry geom;

	/**
	 * Default constructor
	 */
	public Schlag() {
		super();
	}

	// ----------------------------------------------------------------------
	// GETTER(S) & SETTER(S) FOR THE PRIMARY KEY
	// ----------------------------------------------------------------------
	/**
	 * Set the "gid" field value This field is mapped on the database column "gid" (
	 * type "serial", NotNull : true )
	 *
	 * @param gid
	 */
	public void setGid(final Integer gid) {
		this.gid = gid;
	}

	/**
	 * Get the "gid" field value This field is mapped on the database column "gid" (
	 * type "serial", NotNull : true )
	 *
	 * @return the field value
	 */
	public Integer getGid() {
		return gid;
	}

	// ----------------------------------------------------------------------
	// GETTER(S) & SETTER(S) FOR DATA FIELDS
	// ----------------------------------------------------------------------
	// --- DATABASE MAPPING : flik ( varchar )
	/**
	 * Set the "flik" field value This field is mapped on the database column "flik"
	 * ( type "varchar", NotNull : false )
	 *
	 * @param flik
	 */
	public void setFlik(final String flik) {
		this.flik = flik;
	}

	/**
	 * Get the "flik" field value This field is mapped on the database column "flik"
	 * ( type "varchar", NotNull : false )
	 *
	 * @return the field value
	 */
	public String getFlik() {
		return flik;
	}

	// --- DATABASE MAPPING : schlagnr ( numeric )
	/**
	 * Set the "schlagnr" field value This field is mapped on the database column
	 * "schlagnr" ( type "numeric", NotNull : false )
	 *
	 * @param schlagnr
	 */
	public void setSchlagnr(final BigDecimal schlagnr) {
		this.schlagnr = schlagnr;
	}

	/**
	 * Get the "schlagnr" field value This field is mapped on the database column
	 * "schlagnr" ( type "numeric", NotNull : false )
	 *
	 * @return the field value
	 */
	public BigDecimal getSchlagnr() {
		return schlagnr;
	}

	// --- DATABASE MAPPING : kulturcode ( varchar )
	/**
	 * Set the "kulturcode" field value This field is mapped on the database column
	 * "kulturcode" ( type "varchar", NotNull : false )
	 *
	 * @param kulturcode
	 */
	public void setKulturcode(final String kulturcode) {
		this.kulturcode = kulturcode;
	}

	/**
	 * Get the "kulturcode" field value This field is mapped on the database column
	 * "kulturcode" ( type "varchar", NotNull : false )
	 *
	 * @return the field value
	 */
	public String getKulturcode() {
		return kulturcode;
	}

	// --- DATABASE MAPPING : antjahr ( numeric )
	/**
	 * Set the "antjahr" field value This field is mapped on the database column
	 * "antjahr" ( type "numeric", NotNull : false )
	 *
	 * @param antjahr
	 */
	public void setAntjahr(final Long antjahr) {
		this.antjahr = antjahr;
	}

	/**
	 * Get the "antjahr" field value This field is mapped on the database column
	 * "antjahr" ( type "numeric", NotNull : false )
	 *
	 * @return the field value
	 */
	public Long getAntjahr() {
		return antjahr;
	}

	// --- DATABASE MAPPING : gem_fl ( float8 )
	/**
	 * Set the "gemFl" field value This field is mapped on the database column
	 * "gem_fl" ( type "float8", NotNull : false )
	 *
	 * @param gemFl
	 */
	public void setGemFl(final Double gemFl) {
		this.gemFl = gemFl;
	}

	/**
	 * Get the "gemFl" field value This field is mapped on the database column
	 * "gem_fl" ( type "float8", NotNull : false )
	 *
	 * @return the field value
	 */
	public Double getGemFl() {
		return gemFl;
	}

	// --- DATABASE MAPPING : geom ( geometry )
	/**
	 * Set the "geom" field value This field is mapped on the database column "geom"
	 * ( type "geometry", NotNull : false )
	 *
	 * @param geom
	 */
	public void setGeom(final Geometry geom) {
		this.geom = geom;
	}

	/**
	 * Get the "geom" field value This field is mapped on the database column "geom"
	 * ( type "geometry", NotNull : false )
	 *
	 * @return the field value
	 */
	public Geometry getGeom() {
		return geom;
	}

	// ----------------------------------------------------------------------
	// toString METHOD
	// ----------------------------------------------------------------------
	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append(gid);
		sb.append("|");
		sb.append(flik);
		sb.append("|");
		sb.append(schlagnr);
		sb.append("|");
		sb.append(kulturcode);
		sb.append("|");
		sb.append(antjahr);
		sb.append("|");
		sb.append(gemFl);
		sb.append("|");
		sb.append(geom);
		return sb.toString();
	}

}
