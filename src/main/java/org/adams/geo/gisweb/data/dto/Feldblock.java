/*
 * Java bean class for entity table feldblock
 * Created on 23 Mï¿½r 2018 ( Date ISO 2018-03-23 - Time 23:44:21 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */

package org.adams.geo.gisweb.data.dto;

import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;

import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.vividsolutions.jts.geom.Geometry;
import org.adams.geo.gisweb.geojson.FeldblockGeoJsonSerializer;

/**
 * Entity bean for table "feldblock"
 *
 * @author Telosys Tools Generator
 *
 */
@JsonSerialize(using = FeldblockGeoJsonSerializer.class)
public class Feldblock implements Serializable {
	private static final long serialVersionUID = 1L;

	private Integer gid; // Primary Key

	private String flik;
	private String stand;
	private Short antJahr;
	private String bnk;
	private String bnkTxt;
	private Double flaeche;
	private Geometry geom;
	private BigInteger seSdoRow;
	private BigDecimal shapeArea;
	private BigDecimal shapeLen;

	/**
	 * Default constructor
	 */
	public Feldblock() {
		super();
	}

	// ----------------------------------------------------------------------
	// GETTER(S) & SETTER(S) FOR THE PRIMARY KEY
	// ----------------------------------------------------------------------
	/**
	 * Set the "gid" field value This field is mapped on the database column "gid" (
	 * type "serial", NotNull : true )
	 *
	 * @param gid
	 */
	public void setGid(final Integer gid) {
		this.gid = gid;
	}

	/**
	 * Get the "gid" field value This field is mapped on the database column "gid" (
	 * type "serial", NotNull : true )
	 *
	 * @return the field value
	 */
	public Integer getGid() {
		return gid;
	}

	// ----------------------------------------------------------------------
	// GETTER(S) & SETTER(S) FOR DATA FIELDS
	// ----------------------------------------------------------------------
	// --- DATABASE MAPPING : flik ( varchar )
	/**
	 * Set the "flik" field value This field is mapped on the database column "flik"
	 * ( type "varchar", NotNull : false )
	 *
	 * @param flik
	 */
	public void setFlik(final String flik) {
		this.flik = flik;
	}

	/**
	 * Get the "flik" field value This field is mapped on the database column "flik"
	 * ( type "varchar", NotNull : false )
	 *
	 * @return the field value
	 */
	public String getFlik() {
		return flik;
	}

	// --- DATABASE MAPPING : stand ( varchar )
	/**
	 * Set the "stand" field value This field is mapped on the database column
	 * "stand" ( type "varchar", NotNull : false )
	 *
	 * @param stand
	 */
	public void setStand(final String stand) {
		this.stand = stand;
	}

	/**
	 * Get the "stand" field value This field is mapped on the database column
	 * "stand" ( type "varchar", NotNull : false )
	 *
	 * @return the field value
	 */
	public String getStand() {
		return stand;
	}

	// --- DATABASE MAPPING : ant_jahr ( int2 )
	/**
	 * Set the "antJahr" field value This field is mapped on the database column
	 * "ant_jahr" ( type "int2", NotNull : false )
	 *
	 * @param antJahr
	 */
	public void setAntJahr(final Short antJahr) {
		this.antJahr = antJahr;
	}

	/**
	 * Get the "antJahr" field value This field is mapped on the database column
	 * "ant_jahr" ( type "int2", NotNull : false )
	 *
	 * @return the field value
	 */
	public Short getAntJahr() {
		return antJahr;
	}

	// --- DATABASE MAPPING : bnk ( varchar )
	/**
	 * Set the "bnk" field value This field is mapped on the database column "bnk" (
	 * type "varchar", NotNull : false )
	 *
	 * @param bnk
	 */
	public void setBnk(final String bnk) {
		this.bnk = bnk;
	}

	/**
	 * Get the "bnk" field value This field is mapped on the database column "bnk" (
	 * type "varchar", NotNull : false )
	 *
	 * @return the field value
	 */
	public String getBnk() {
		return bnk;
	}

	// --- DATABASE MAPPING : bnk_txt ( varchar )
	/**
	 * Set the "bnkTxt" field value This field is mapped on the database column
	 * "bnk_txt" ( type "varchar", NotNull : false )
	 *
	 * @param bnkTxt
	 */
	public void setBnkTxt(final String bnkTxt) {
		this.bnkTxt = bnkTxt;
	}

	/**
	 * Get the "bnkTxt" field value This field is mapped on the database column
	 * "bnk_txt" ( type "varchar", NotNull : false )
	 *
	 * @return the field value
	 */
	public String getBnkTxt() {
		return bnkTxt;
	}

	// --- DATABASE MAPPING : flaeche ( float8 )
	/**
	 * Set the "flaeche" field value This field is mapped on the database column
	 * "flaeche" ( type "float8", NotNull : false )
	 *
	 * @param flaeche
	 */
	public void setFlaeche(final Double flaeche) {
		this.flaeche = flaeche;
	}

	/**
	 * Get the "flaeche" field value This field is mapped on the database column
	 * "flaeche" ( type "float8", NotNull : false )
	 *
	 * @return the field value
	 */
	public Double getFlaeche() {
		return flaeche;
	}

	// --- DATABASE MAPPING : geom ( geometry )
	/**
	 * Set the "geom" field value This field is mapped on the database column "geom"
	 * ( type "geometry", NotNull : false )
	 *
	 * @param geom
	 */
	public void setGeom(final Geometry geom) {
		this.geom = geom;
	}

	/**
	 * Get the "geom" field value This field is mapped on the database column "geom"
	 * ( type "geometry", NotNull : false )
	 *
	 * @return the field value
	 */
	public Geometry getGeom() {
		return geom;
	}


	public BigInteger getSeSdoRow() {
		return seSdoRow;
	}

	public void setSeSdoRow(BigInteger seSdoRow) {
		this.seSdoRow = seSdoRow;
	}

	public BigDecimal getShapeArea() {
		return shapeArea;
	}

	public void setShapeArea(BigDecimal shapeArea) {
		this.shapeArea = shapeArea;
	}

	public BigDecimal getShapeLen() {
		return shapeLen;
	}

	public void setShapeLen(BigDecimal shapeLen) {
		this.shapeLen = shapeLen;
	}

	// ----------------------------------------------------------------------
	// toString METHOD
	// ----------------------------------------------------------------------


	@Override
	public String toString() {
		return "Feldblock{" +
				"gid=" + gid +
				", flik='" + flik + '\'' +
				", stand='" + stand + '\'' +
				", antJahr=" + antJahr +
				", bnk='" + bnk + '\'' +
				", bnkTxt='" + bnkTxt + '\'' +
				", flaeche=" + flaeche +
				", geom=" + geom +
				", seSdoRow=" + seSdoRow +
				", shapeArea=" + shapeArea +
				", shapeLen=" + shapeLen +
				'}';
	}
}
