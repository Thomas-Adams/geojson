/*
 * Created on 23 Mï¿½r 2018 ( Time 23:37:27 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.adams.geo.gisweb.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.adams.geo.gisweb.business.service.TeillandschaftselementService;
import org.adams.geo.gisweb.business.service.mapping.TeillandschaftselementServiceMapper;
import org.adams.geo.gisweb.data.dto.Teillandschaftselement;
import org.adams.geo.gisweb.data.entities.TeillandschaftselementEntity;
import org.adams.geo.gisweb.data.repository.TeillandschaftselementRepository;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.querydsl.core.types.Predicate;

/**
 * Implementation of TeillandschaftselementService
 */
@Component
@Transactional
public class TeillandschaftselementServiceImpl implements TeillandschaftselementService {

	@Resource
	private TeillandschaftselementRepository teillandschaftselementRepository;

	@Resource
	private TeillandschaftselementServiceMapper teillandschaftselementServiceMapper;

	@Override
	public Teillandschaftselement findById(final Integer gid) {
		TeillandschaftselementEntity teillandschaftselementEntity = teillandschaftselementRepository.findOne(gid);
		return teillandschaftselementServiceMapper
				.mapTeillandschaftselementEntityToTeillandschaftselement(teillandschaftselementEntity);
	}

	@Override
	public List<Teillandschaftselement> findAll() {
		Iterable<TeillandschaftselementEntity> entities = teillandschaftselementRepository.findAll();
		List<Teillandschaftselement> beans = new ArrayList<>();
		for (TeillandschaftselementEntity teillandschaftselementEntity : entities) {
			beans.add(teillandschaftselementServiceMapper
					.mapTeillandschaftselementEntityToTeillandschaftselement(teillandschaftselementEntity));
		}
		return beans;
	}

	@Override
	public Teillandschaftselement save(final Teillandschaftselement teillandschaftselement) {
		return update(teillandschaftselement);
	}

	@Override
	public Teillandschaftselement create(final Teillandschaftselement teillandschaftselement) {
		if (teillandschaftselement.getGid() != null) {
			TeillandschaftselementEntity teillandschaftselementEntity = teillandschaftselementRepository
					.findOne(teillandschaftselement.getGid());
			if (teillandschaftselementEntity != null) {
				throw new IllegalStateException("already.exists");
			}
		}
		TeillandschaftselementEntity teillandschaftselementEntity = new TeillandschaftselementEntity();
		teillandschaftselementServiceMapper.mapTeillandschaftselementToTeillandschaftselementEntity(
				teillandschaftselement, teillandschaftselementEntity);
		TeillandschaftselementEntity teillandschaftselementEntitySaved = teillandschaftselementRepository
				.save(teillandschaftselementEntity);
		return teillandschaftselementServiceMapper
				.mapTeillandschaftselementEntityToTeillandschaftselement(teillandschaftselementEntitySaved);
	}

	@Override
	public Teillandschaftselement update(final Teillandschaftselement teillandschaftselement) {
		TeillandschaftselementEntity teillandschaftselementEntity = teillandschaftselementRepository
				.findOne(teillandschaftselement.getGid());
		teillandschaftselementServiceMapper.mapTeillandschaftselementToTeillandschaftselementEntity(
				teillandschaftselement, teillandschaftselementEntity);
		TeillandschaftselementEntity teillandschaftselementEntitySaved = teillandschaftselementRepository
				.save(teillandschaftselementEntity);
		return teillandschaftselementServiceMapper
				.mapTeillandschaftselementEntityToTeillandschaftselement(teillandschaftselementEntitySaved);
	}

	@Override
	public Page<Teillandschaftselement> findAll(final Predicate predicate, final Pageable pageable) {
		Page<TeillandschaftselementEntity> entities = teillandschaftselementRepository.findAll(predicate, pageable);
		List<Teillandschaftselement> beans = new ArrayList<>();
		for (TeillandschaftselementEntity teillandschaftselementEntity : entities) {
			beans.add(teillandschaftselementServiceMapper
					.mapTeillandschaftselementEntityToTeillandschaftselement(teillandschaftselementEntity));
		}
		return new PageImpl<>(beans);
	}

	@Override
	public void delete(final Integer gid) {
		teillandschaftselementRepository.delete(gid);
	}

	public TeillandschaftselementRepository getTeillandschaftselementJpaRepository() {
		return teillandschaftselementRepository;
	}

	public void setTeillandschaftselementJpaRepository(
			final TeillandschaftselementRepository teillandschaftselementRepository) {
		this.teillandschaftselementRepository = teillandschaftselementRepository;
	}

	public TeillandschaftselementServiceMapper getTeillandschaftselementServiceMapper() {
		return teillandschaftselementServiceMapper;
	}

	public void setTeillandschaftselementServiceMapper(
			final TeillandschaftselementServiceMapper teillandschaftselementServiceMapper) {
		this.teillandschaftselementServiceMapper = teillandschaftselementServiceMapper;
	}

}
