/*
 * Created on 23 Mï¿½r 2018 ( Time 23:37:27 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.adams.geo.gisweb.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.adams.geo.gisweb.data.dto.Teilschlag;
import org.adams.geo.gisweb.data.entities.TeilschlagEntity;
import org.adams.geo.gisweb.test.MockValues;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class TeilschlagServiceMapperTest {

	private TeilschlagServiceMapper teilschlagServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();

	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	@Before
	public void before() {
		teilschlagServiceMapper = new TeilschlagServiceMapper();
		teilschlagServiceMapper.setModelMapper(modelMapper);
	}

	/**
	 * Mapping from 'TeilschlagEntity' to 'Teilschlag'
	 *
	 * @param teilschlagEntity
	 */
	@Test
	public void testMapTeilschlagEntityToTeilschlag() {
		// Given
		TeilschlagEntity teilschlagEntity = new TeilschlagEntity();
		teilschlagEntity.setFlik(mockValues.nextString(254));
		teilschlagEntity.setSchlagnr(mockValues.nextBigDecimal());
		teilschlagEntity.setTsbez(mockValues.nextString(2));
		teilschlagEntity.setKulturcode(mockValues.nextString(100));
		teilschlagEntity.setAntjahr(mockValues.nextLong());
		teilschlagEntity.setGemFl(mockValues.nextDouble());
		teilschlagEntity.setGeom(mockValues.nextGeometry());

		// When
		Teilschlag teilschlag = teilschlagServiceMapper.mapTeilschlagEntityToTeilschlag(teilschlagEntity);

		// Then
		assertEquals(teilschlagEntity.getFlik(), teilschlag.getFlik());
		assertEquals(teilschlagEntity.getSchlagnr(), teilschlag.getSchlagnr());
		assertEquals(teilschlagEntity.getTsbez(), teilschlag.getTsbez());
		assertEquals(teilschlagEntity.getKulturcode(), teilschlag.getKulturcode());
		assertEquals(teilschlagEntity.getAntjahr(), teilschlag.getAntjahr());
		assertEquals(teilschlagEntity.getGemFl(), teilschlag.getGemFl());
		assertEquals(teilschlagEntity.getGeom(), teilschlag.getGeom());
	}

	/**
	 * Test : Mapping from 'Teilschlag' to 'TeilschlagEntity'
	 */
	@Test
	public void testMapTeilschlagToTeilschlagEntity() {
		// Given
		Teilschlag teilschlag = new Teilschlag();
		teilschlag.setFlik(mockValues.nextString(254));
		teilschlag.setSchlagnr(mockValues.nextBigDecimal());
		teilschlag.setTsbez(mockValues.nextString(2));
		teilschlag.setKulturcode(mockValues.nextString(100));
		teilschlag.setAntjahr(mockValues.nextLong());
		teilschlag.setGemFl(mockValues.nextDouble());
		teilschlag.setGeom(mockValues.nextGeometry());

		TeilschlagEntity teilschlagEntity = new TeilschlagEntity();

		// When
		teilschlagServiceMapper.mapTeilschlagToTeilschlagEntity(teilschlag, teilschlagEntity);

		// Then
		assertEquals(teilschlag.getFlik(), teilschlagEntity.getFlik());
		assertEquals(teilschlag.getSchlagnr(), teilschlagEntity.getSchlagnr());
		assertEquals(teilschlag.getTsbez(), teilschlagEntity.getTsbez());
		assertEquals(teilschlag.getKulturcode(), teilschlagEntity.getKulturcode());
		assertEquals(teilschlag.getAntjahr(), teilschlagEntity.getAntjahr());
		assertEquals(teilschlag.getGemFl(), teilschlagEntity.getGemFl());
		assertEquals(teilschlag.getGeom(), teilschlagEntity.getGeom());
	}

}